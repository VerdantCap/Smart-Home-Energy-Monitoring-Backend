services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: smart_home_postgres
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - smart_home_network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: smart_home_redis
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - smart_home_network

  # Smart Home Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smart_home_backend
    env_file:
      - .env
    command: 
      - sh
      - -c
      - |
        poetry run alembic upgrade head
        poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "${PORT:-8000}:8000"
    volumes:
      - ./alembic:/app/alembic
      - ./scripts:/app/scripts
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - smart_home_network
    restart: unless-stopped

  # Telemetry Data Simulator
  simulator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smart_home_simulator
    env_file:
      - .env
    command: ["poetry", "run", "python", "scripts/simulate-telemetry.py"]
    volumes:
      - ./scripts:/app/scripts
    depends_on:
      backend:
        condition: service_started
    networks:
      - smart_home_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  smart_home_network:
    driver: bridge
